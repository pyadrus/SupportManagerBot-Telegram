# -*- coding: utf-8 -*-
from aiogram.filters import CommandStart, Command
from aiogram.types import Message
from loguru import logger

from dispatcher import router
from markups import choose_lang, admin_keyboard
from middlewares import AdminFilter


@router.message(CommandStart())
async def start(message: Message):
    """–û—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start –∏ –≤—ã–≤–æ–¥–∏—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ."""
    try:
        logger.info(f'–í–≤–µ–¥–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /start - {message.chat.id}')
        await message.answer(
            "üëã <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –æ–±—â–µ–Ω–∏—è</b> / <b>–•—É—à –æ–º–∞–¥–µ–¥! –ó–∞–±–æ–Ω–∏ –º—É–æ–º–∏–ª–∞—Ä–æ –∏–Ω—Ç–∏—Ö–æ–± –∫—É–Ω–µ–¥:</b>",
            reply_markup=choose_lang())
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ /start: {e} - {message.chat.id}")


@router.message(Command(commands=['admin']), AdminFilter())
async def admin(message: Message):
    try:
        logger.info(f'–í–≤–µ–¥–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /admin - {message.chat.id}')
        await message.answer(f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.first_name}! –í—ã –ø–æ–ø–∞–ª–∏ –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å",
                             reply_markup=admin_keyboard())
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ /admin: {e} - {message.chat.id}")


def register_commands():
    router.message.register(start)
    router.message.register(admin)
