# -*- coding: utf-8 -*-
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, KeyboardButton, ReplyKeyboardMarkup


def choose_lang() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞"""
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="üáπüáØ –ó–∞–±–æ–Ω–∏ —Ç–æ“∑–∏–∫”£", callback_data="lang-tj"),
                InlineKeyboardButton(text="üá∑üá∫ –†—É—Å—Å–∫–∏–π —è–∑—ã–∫", callback_data="lang-ru"),
            ]
        ]
    )


def start(lang: str) -> InlineKeyboardMarkup:
    if lang == "tj":
        btns = [
            [
                InlineKeyboardButton(
                    text="üÜò –ö”Ø–º–∞–∫–∏ –º—É—Ç–∞—Ö–∞—Å—Å–∏—Å", callback_data="call_manager"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üîó –ü–æ—Ä—Ç–∞–ª–∏ —Ö–∏–∑–º–∞—Ç—Ä–∞—Å–æ–Ω–∏“≥–æ", url="https://khizmat.ehukumat.tj"
                ),
                InlineKeyboardButton(
                    text="‚úçÔ∏è –ë–æ—Ä–≥–∏—Ä–∏–∏ –ò–ú–ó–û",
                    url="https://play.google.com/store/apps/details?id=tj.dc.myid1a",
                ),
            ],
        ]
    elif lang == "ru":
        btns = [
            [
                InlineKeyboardButton(
                    text="üÜò –ü–æ–º–æ—â—å —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞", callback_data="call_manager"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üîó –ü–æ—Ä—Ç–∞–ª –≥–æ—Å—É—Å–ª—É–≥", url="https://khizmat.ehukumat.tj"
                ),
                InlineKeyboardButton(
                    text="‚úçÔ∏è –°–∫–∞—á–∞—Ç—å –ò–ú–ó–û",
                    url="https://play.google.com/store/apps/details?id=tj.dc.myid1a",
                ),
            ],
        ]
    return InlineKeyboardMarkup(inline_keyboard=btns)


def stat_period() -> InlineKeyboardMarkup:
    periods = {
        "1": "–î–µ–Ω—å",
        "7": "–ù–µ–¥–µ–ª—è",
        "30": "–ú–µ—Å—è—Ü",
        "90": "–ö–≤–∞—Ä—Ç–∞–ª",
        "183": "–ü–æ–ª–≥–æ–¥–∞",
        "365": "–ì–æ–¥",
    }
    btns = []
    row = []
    for key, value in periods.items():
        row.append(InlineKeyboardButton(text=value, callback_data=f"statistic-{key}"))
        if len(row) == 2:
            btns.append(row)
            row = []
    return InlineKeyboardMarkup(inline_keyboard=btns)


def close_appeal(lang) -> ReplyKeyboardMarkup:
    btns = [
        [
            KeyboardButton(
                text="‚ùå –ü”Ø—à–∏–¥–∞–Ω–∏ –∞—Ä–∏–∑–∞" if lang == "tj" else "‚ùå –ó–∞–∫—Ä—ã—Ç—å –∑–∞—è–≤–∫—É"
            )
        ]
    ]
    return ReplyKeyboardMarkup(
        keyboard=btns, resize_keyboard=True, one_time_keyboard=True
    )


def set_rating(appeal_id: int) -> InlineKeyboardMarkup:
    btns = []
    row = []
    for i in range(5):
        row.append(
            InlineKeyboardButton(
                text=str(i + 1), callback_data=f"set_rating-{appeal_id}-{i + 1}"
            )
        )
        if len(row) == 3 or i == 4:
            btns.append(row)
            row = []
    return InlineKeyboardMarkup(inline_keyboard=btns)


def manage_appeal() -> InlineKeyboardMarkup:
    btns = [
        [InlineKeyboardButton(text="‚úÖ –í–∑—è—Ç—å –≤ —Ä–∞–±–æ—Ç—É", callback_data="accept_appeal")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=btns)


def consent_or_edit_my_appeal(lang) -> InlineKeyboardMarkup:
    btns = [
        [
            InlineKeyboardButton(
                text="‚úÖ “≤–∞–º–∞ —á–∏–∑ —Ö—É–± –∞—Å—Ç" if lang == "tj" else "‚úÖ –í—Å—ë –≤ –ø–æ—Ä—è–¥–∫–µ",
                callback_data="consent_my_appeal",
            )
        ],
        [
            InlineKeyboardButton(
                text="‚úèÔ∏èÔ∏è –¢–∞“≥—Ä–∏—Ä" if lang == "tj" else "‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å",
                callback_data="edit_my_appeal",
            )
        ],
    ]
    return InlineKeyboardMarkup(inline_keyboard=btns)


def edit_my_appeal(lang) -> InlineKeyboardMarkup:
    btns = [
        [
            InlineKeyboardButton(
                text="‚úçÔ∏è –¢–∞“ì–π–∏—Ä –¥–æ–¥–∞–Ω–∏ –ù–æ–º–∏ –ø—É—Ä—Ä–∞" if lang == "tj" else "‚úçÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –§–ò–û",
                callback_data="edit_appeal-fio",
            )
        ],
        [
            InlineKeyboardButton(
                text=(
                    "üìû –¢–∞“ì–π–∏—Ä –¥–æ–¥–∞–Ω–∏ —Ç–µ–ª–µ—Ñ–æ–Ω"
                    if lang == "tj"
                    else "üìû –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω"
                ),
                callback_data="edit_appeal-phone",
            )
        ],
        [
            InlineKeyboardButton(
                text="‚ùì –¢–∞“ì–π–∏—Ä –¥–æ–¥–∞–Ω–∏ —Å–∞–≤–æ–ª" if lang == "tj" else "‚ùì –ò–∑–º–µ–Ω–∏—Ç—å –≤–æ–ø—Ä–æ—Å",
                callback_data="edit_appeal-question",
            )
        ],
        [
            InlineKeyboardButton(
                text="‚úÖ –ò—Ä—Å–æ–ª" if lang == "tj" else "‚úÖ –û—Ç–ø—Ä–∞–≤–∏—Ç—å",
                callback_data="consent_my_appeal",
            )
        ],
    ]
    return InlineKeyboardMarkup(inline_keyboard=btns)
